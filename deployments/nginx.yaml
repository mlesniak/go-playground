apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
            - containerPort: 443
          resources:
            requests:
              cpu: "100m"
              memory: "20M"
            limits:
              cpu: "1000m"
              memory: "128M"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
    - protocol: TCP
      name: https
      port: 443
      targetPort: 443

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }

    stream {
      upstream mongodb {
        server mongodb-service:27017;
      }


      server {
          listen       27017;
          # server_name mongodb.mlesniak.dev;
          proxy_pass mongodb;
      }
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
          listen 80 default_server;
          listen [::]:80 default_server;
          server_name _;
          # return 404;
          # for certbot
          root /www/data;
        }

        server {
            listen       80;
            server_name api.mlesniak.dev;
            location / {
                proxy_pass http://go-demo-service:80;
            }
        }

        server {
            listen       443;
            server_name api.mlesniak.dev;
            location / {
                proxy_pass http://go-demo-service:80;
            }
        }

        server {
          listen       443;
          server_name keycloak.mlesniak.dev;
          location / {
              proxy_pass http://keycloak-service:8080;
          }
        }
    }


